rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check if user is authenticated
    function isSignedIn() {
      return request.auth != null;
    }
    
    // Helper function to check if user owns the resource
    function isOwner(userId) {
      return isSignedIn() && request.auth.uid == userId;
    }
    
    // Helper function to check if user is a member of a group
    function isMember(groupId) {
      return isSignedIn() && 
             request.auth.uid in get(/databases/$(database)/documents/study_groups/$(groupId)).data.memberUids;
    }
    
    // User profiles - users can only modify their own
    match /users/{userId} {
      allow read: if isSignedIn();
      allow create, update: if isOwner(userId);
      allow delete: if false; // Prevent profile deletion
    }
    
    // Study groups
    match /study_groups/{groupId} {
      // Anyone can read public groups
      allow read: if isSignedIn();
      
      // Any authenticated user can create a group
      allow create: if isSignedIn() && 
                       request.resource.data.createdByUid == request.auth.uid &&
                       request.auth.uid in request.resource.data.memberUids;
      
      // Only members can update group info
      allow update: if isMember(groupId);
      
      // Groups can only be deleted if empty (or by creator)
      allow delete: if isSignedIn() && 
                       (resource.data.memberUids.size() == 0 || 
                        request.auth.uid == resource.data.createdByUid);
      
      // Messages subcollection
      match /messages/{messageId} {
        // Members can read all messages
        allow read: if isMember(groupId);
        
        // Members can create messages
        allow create: if isMember(groupId) && 
                         request.resource.data.authorUid == request.auth.uid;
        
        // Only message author can update
        allow update: if isMember(groupId) && 
                         resource.data.authorUid == request.auth.uid;
        
        // Only message author can delete
        allow delete: if isMember(groupId) && 
                         resource.data.authorUid == request.auth.uid;
      }
      
      // Sessions subcollection
      match /sessions/{sessionId} {
        // Members can read sessions
        allow read: if isMember(groupId);
        
        // Members can create sessions
        allow create: if isMember(groupId);
        
        // Session creator or group admin can update/delete
        allow update, delete: if isMember(groupId);
      }
    }
  }
}
